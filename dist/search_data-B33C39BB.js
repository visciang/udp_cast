searchData={"items":[{"type":"module","title":"UdpCast","doc":"A GenServer implementation for UDP broadcast and multicast communication.\n\nThis module provides functionality for:\n- UDP broadcast messaging across a network\n- UDP multicast group messaging\n- Customizable message handling via callback functions","ref":"UdpCast.html"},{"type":"module","title":"Examples - UdpCast","doc":"# Start a UDP broadcast server\n    {:ok, pid} = UdpCast.start_link(%UdpCast.Args.Broadcast{\n      on_cast: fn msg ->\n        IO.puts(\"Received: #{inspect(msg)}\")\n        :ok\n      end\n    })","ref":"UdpCast.html#module-examples"},{"type":"function","title":"UdpCast.cast/2","doc":"Sends a broadcaste/multicast message.","ref":"UdpCast.html#cast/2"},{"type":"function","title":"Parameters - UdpCast.cast/2","doc":"- `server`: The `UdpCast` process to send the message to.\n- `msg`: The message to be sent.","ref":"UdpCast.html#cast/2-parameters"},{"type":"function","title":"Returns - UdpCast.cast/2","doc":"- `:ok` if the message was successfully sent.\n- `{:error, reason}` if there was an error sending the message.","ref":"UdpCast.html#cast/2-returns"},{"type":"function","title":"UdpCast.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"UdpCast.html#child_spec/1"},{"type":"type","title":"UdpCast.on_cast/0","doc":"Callback function for handling received UDP messages.\nTakes the multi/broad-casted message and returns `:ok`.","ref":"UdpCast.html#t:on_cast/0"},{"type":"function","title":"UdpCast.start_link/1","doc":"Starts a new `UdpCast` process with the given configuration arguments.","ref":"UdpCast.html#start_link/1"},{"type":"module","title":"UdpCast.Args","doc":"Configuration arguments for UDP communication.\nContains submodules for Broadcast and Multicast configurations.","ref":"UdpCast.Args.html"},{"type":"type","title":"UdpCast.Args.t/0","doc":"","ref":"UdpCast.Args.html#t:t/0"},{"type":"module","title":"UdpCast.Args.Broadcast","doc":"Configuration for UDP broadcast communication.","ref":"UdpCast.Args.Broadcast.html"},{"type":"type","title":"UdpCast.Args.Broadcast.t/0","doc":"- `:bind_addr` - Local IP address to bind to (default: {0,0,0,0})\n- `:port` - UDP port number for sending/receiving broadcasts (default: 45892)\n- `:on_cast` - Callback function for handling received messages","ref":"UdpCast.Args.Broadcast.html#t:t/0"},{"type":"module","title":"UdpCast.Args.Multicast","doc":"Configuration for UDP multicast group communication.","ref":"UdpCast.Args.Multicast.html"},{"type":"type","title":"UdpCast.Args.Multicast.t/0","doc":"- `:bind_addr` - Local IP address to bind to (default: {0,0,0,0})\n- `:port` - UDP port number for sending/receiving multicast messages (default: 45892)\n- `:multicast_addr` - Multicast group IP address (default: {233,252,1,32})\n- `:multicast_if` - Local interface for multicast (default: nil)\n- `:multicast_ttl` - Time-to-live for multicast packets (default: 1)\n- `:on_cast` - Callback function for handling received messages","ref":"UdpCast.Args.Multicast.html#t:t/0"}],"proglang":"elixir","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.36.1"}}